---

- name: Begin certbot task
  ansible.builtin.debug:
    msg: '##### CERTBOT #####'

- name: Create certbot user
  ansible.builtin.user:
    name: '{{ letsencrypt.certbot.user }}'

- name: Install certbot package
  ansible.builtin.package:
    name:
      - certbot
      - python3-certbot-apache
    state: latest

- name: Check if certificate already exists
  ansible.builtin.stat:
    path: /etc/letsencrypt/live/{{ servername }}/cert.pem
  register: letsencrypt_cert

- name: Stop services to allow certbot to generate a cert
  ansible.builtin.service:
    name: httpd
    state: stopped
  when:
    - ansible_os_family == "RedHat"
    - not letsencrypt_cert.stat.exists

- name: Generate new certificate if one doesn't exist.
  ansible.builtin.command: 'certbot --apache --noninteractive --agree-tos --email {{ letsencrypt.certbot.email }} -d {{ servername }} {{ "--test-cert" if letsencrypt.certbot.test_cert else "" }}'
  when: not letsencrypt_cert.stat.exists

- name: Start services after cert has been generated
  ansible.builtin.service:
    name: httpd
    state: started
  when:
    - ansible_os_family == "RedHat"
    - not letsencrypt_cert.stat.exists

- name: Automatically renew certs on rocky
  ansible.builtin.service:
    name: certbot-renew.timer
    state: started
    enabled: true
  when:
    - letsencrypt.certbot.autorenew == true
    - ansible_os_family == "RedHat"

- name: Automatically renew certs on debian
  ansible.builtin.service:
    name: certbot
    state: started
    enabled: true
  when:
    - letsencrypt.certbot.autorenew == true
    - ansible_os_family == "Debian"
